group_by(sex,sport)%>%
filter(sex == 'Female'&!is.na(age))%>%
summarize(avg_age = mean(age),n = n())%>%
arrange(avg_age)
df_sport <- df_bday_age %>%
group_by(sex, sport)%>%
filter(sex == 'Female')%>%
summarize(avg_age = mean(age, na.rm = TRUE),n = n())%>%
arrange(avg_age)%>%
slice(1:10)
birthday <- games_athletes_results%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
df_female_age <- df_bday_age %>%
group_by(sex,sport)%>%
filter(sex == 'Female'&!is.na(age))%>%
summarize(avg_age = mean(age),n = n())%>%
arrange(avg_age)
df_female_age <- df_age %>%
group_by(sex,sport)%>%
filter(sex == 'Female'&!is.na(age))%>%
summarize(avg_age = mean(age),n = n())%>%
arrange(avg_age)
df_female_age[1:10,]
#mutate (age =as.numeric(round(games_opened-birthday)/365.25))
#mutate(age = interval(birthday, games_opened) / dyears(1))
df_age
results <- read_csv(file = "results.csv")
results%>%
group_by(country)%>%
summarise(count=n())%>%
arrange(desc(count))%>%
slice(1:10)
results %>%
filter(str_detect(country,"Germany") & (season == "Winter"))%>%
summarise(n = n())
athletes <- athletes <- read_delim("athletes.csv", delim = ";",
escape_double = FALSE, trim_ws = TRUE)
results_athletes <- inner_join(results, athletes, by = "athlete")
# Inner join was used because I only want results where we know which athlete participated
heights_weights <- results_athletes %>%
separate(measurements, into =  c("heights", "weights"), sep ="/")%>%
mutate(heights = as.numeric(str_extract(heights, "\\d+")),
weights=as.numeric(str_extract(weights, "\\d+")))
heights_weights%>%
select(athlete, sex,heights, weights) %>%
filter(sex == "Male") %>%
distinct(athlete,.keep_all = TRUE) %>%
summarise(Avg_height = mean(heights, na.rm = TRUE),
Avg_weight = mean(weights, na.rm = TRUE))
heights_weights%>%
filter(heights == max(heights, na.rm = T))
games <- read_tsv("games.tsv")
results_athletes_games <-left_join(results_athletes, games,
by =c("season", "year"))
anti_join(games, results_athletes, by =c("season","year"))
birthday <- games_athletes_results%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
#mutate (age =as.numeric(round(games_opened-birthday)/365.25))
#mutate(age = interval(birthday, games_opened) / dyears(1))
df_age
birthday <- games_athletes_results%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
birthday
results_athletes_games <-left_join(results_athletes, games,
by =c("season", "year"))
birthday <- results_athletes_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
birthday
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
#mutate (age =as.numeric(round(games_opened-birthday)/365.25))
#mutate(age = interval(birthday, games_opened) / dyears(1))
df_age
birthday <- results_athletes_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = mdy(birthday))
birthday
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
#mutate (age =as.numeric(round(games_opened-birthday)/365.25))
#mutate(age = interval(birthday, games_opened) / dyears(1))
df_age
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
#mutate (age =as.numeric(round(games_opened-birthday)/365.25))
#mutate(age = interval(birthday, games_opened) / dyears(1))
df_age
library(tidyverse)
library(lubridate)
library(stringr)
results <- read_csv(file = "results.csv")
results%>%
group_by(country)%>%
summarise(count=n())%>%
arrange(desc(count))%>%
slice(1:10)
results %>%
filter(str_detect(country,"Germany") & (season == "Winter"))%>%
summarise(n = n())
athletes <- athletes <- read_delim("athletes.csv", delim = ";",
escape_double = FALSE, trim_ws = TRUE)
results_athletes <- inner_join(results, athletes, by = "athlete")
# Inner join was used because I only want results where we know which athlete participated
heights_weights <- results_athletes %>%
separate(measurements, into =  c("heights", "weights"), sep ="/")%>%
mutate(heights = as.numeric(str_extract(heights, "\\d+")),
weights=as.numeric(str_extract(weights, "\\d+")))
heights_weights%>%
select(athlete, sex,heights, weights) %>%
filter(sex == "Male") %>%
distinct(athlete,.keep_all = TRUE) %>%
summarise(Avg_height = mean(heights, na.rm = TRUE),
Avg_weight = mean(weights, na.rm = TRUE))
heights_weights%>%
filter(heights == max(heights, na.rm = T))
games <- read_tsv("games.tsv")
results_athletes_games <-left_join(results_athletes, games,
by =c("season", "year"))
anti_join(games, results_athletes, by =c("season","year"))
birthday <- results_athletes_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = mdy(birthday))
birthday
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
#mutate (age =as.numeric(round(games_opened-birthday)/365.25))
#mutate(age = interval(birthday, games_opened) / dyears(1))
df_age
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
df_age
library(tidyverse)
library(lubridate)
library(stringr)
athletes <- athletes <- read_delim("athletes.csv", delim = ";",
escape_double = FALSE, trim_ws = TRUE)
athletes_results <- inner_join(athletes_results, by = "athlete")
results_athletes <- inner_join(results,athletes, by = "athlete")
heights_weights <- results_athletes %>%
separate(measurements, into =  c("heights", "weights"), sep ="/")%>%
mutate(heights = as.numeric(str_extract(heights, "\\d+")),
weights=as.numeric(str_extract(weights, "\\d+")))
heights_weights%>%
select(athlete, sex,heights, weights) %>%
filter(sex == "Male") %>%
distinct(athlete,.keep_all = TRUE) %>%
summarise(Avg_height = mean(heights, na.rm = TRUE),
Avg_weight = mean(weights, na.rm = TRUE))
heights_weights%>%
filter(heights == max(heights, na.rm = T))
games <- read_tsv("games.tsv")
results_athletes_games <-left_join(results_athletes, games,
by =c("season", "year"))
anti_join(games, results_athletes, by =c("season","year"))
birthday <- results_athletes_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = mdy(birthday))
birthday
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
df_age
birthday <- results_athletes_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
birthday
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
df_age
results_athletes_games <- full_join(results_athletes, games,
by =c("season", "year"))
birthday <- results_athletes_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
birthday
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
df_age
results_athletes_games <- left_join(results_athletes, games,
by =c("season", "year"))
athletes <- athletes <- read_delim("athletes.csv", delim = ";",
escape_double = FALSE, trim_ws = TRUE)
athletes_results <- inner_join(athletes, results, by = "athlete")
# Inner join was used because I only want results where we know which athlete participated
heights_weights <- athletes_results %>%
separate(measurements, into =  c("heights", "weights"), sep ="/")%>%
mutate(heights = as.numeric(str_extract(heights, "\\d+")),
weights=as.numeric(str_extract(weights, "\\d+")))
heights_weights%>%
select(athlete, sex,heights, weights) %>%
filter(sex == "Male") %>%
distinct(athlete,.keep_all = TRUE) %>%
summarise(Avg_height = mean(heights, na.rm = TRUE),
Avg_weight = mean(weights, na.rm = TRUE))
heights_weights%>%
filter(heights == max(heights, na.rm = T))
athlete_results_games <- left_join(athletes_results, games,
by =c("season", "year"))
birthday <- athlete_results_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
birthday
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
df_age
birthday <- athlete_results_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = mdy(birthday))
birthday
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
df_age
birthday <- athlete_results_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
birthday
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
df_age
df_female_age <- df_age %>%
group_by(sex,sport)%>%
filter(sex == "Female" & !is.na(age))%>%
summarize(avg_age = mean(age),n = n())%>%
arrange(avg_age)
df_female_age[1:10,]
df_female_age <- df_age %>%
group_by(sport)%>%
filter(sex == "Female" & !is.na(age))%>%
summarize(avg_age = mean(age),n = n())%>%
arrange(avg_age)
df_female_age[1:10,]
summer_games_2016 <- athlete_results_game%>%
filter(year == 2016 & season == "Summer" )%>%
pivot_wider(names_from = medal, values_from = medal)
birthday <- athletes_results_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
games <- read_tsv("games.tsv")
athletes_results_games <- left_join(athletes_results, games,
by =c("season", "year"))
anti_join(games, results_athletes, by =c("season","year"))
birthday <- athletes_results_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
birthday
df_age <- birthday%>%
mutate (age = round(interval(birthday,games_opened)/dyears(1)))
df_age
df_female_age <- df_age %>%
group_by(sport)%>%
filter(sex == "Female" & !is.na(age))%>%
summarize(avg_age = mean(age),n = n())%>%
arrange(avg_age)
df_female_age[1:10,]
summer_games_2016 <- athletes_results_games%>%
filter(year == 2016 & season == "Summer" )%>%
pivot_wider(names_from = medal, values_from = medal)
summer_games_2016_individual <- summer_games_2016 %>%
filter(is.na(team)) %>%
group_by(country)%>%
summarise(Gold   = sum(!is.na(Gold)),
Silver = sum(!is.na(Silver)),
Bronze = sum(!is.na(Bronze)))
summer_games_2016_team <- summer_games_2016 %>%
filter(!is.na(team)) %>%
select(sport,discipline,country, Gold, Silver, Bronze)%>%
distinct(.keep_all = TRUE)%>%
group_by(country)%>%
summarise(Gold   = sum(!is.na(Gold)),
Silver = sum(!is.na(Silver)),
Bronze = sum(!is.na(Bronze)))
medal_table_summer_2016 <- summer_games_2016_individual%>%
left_join(summer_games_2016_team, by ='country')
# replace all NA with 0 in order to calculate the sum of the medals
medal_table_summer_2016[is.na(medal_table_summer_2016)] = 0
medal_table_summer_2016 <- medal_table_summer_2016 %>%
mutate(Gold = Gold.x + Gold.y,
Silver = Silver.x + Silver.y,
Bronze = Bronze.x + Bronze.y)%>%
select(country, Gold, Silver, Bronze)%>%
mutate(Total = Gold + Silver + Bronze) %>%
arrange(desc(Gold),desc(Silver), desc(Bronze))
medal_table_summer_2016[1:10,]
games_athletes_results%>%
mutate(UID = paste(name, athlete, country)) %>%
distinct(UID, .keep_all=TRUE) %>%
group_by(name,athlete) %>%
summarise(name = first(name), countries = n()) %>%
arrange(countries) %>%
filter(countries >= 4)
games_athletes_results%>%
filter(athlete == 59866)%>%
select(country)
athletes_results_games%>%
mutate(UID = paste(name, athlete, country)) %>%
distinct(UID, .keep_all=TRUE) %>%
group_by(name,athlete) %>%
summarise(name = first(name), countries = n()) %>%
arrange(countries) %>%
filter(countries >= 4)
athletes_results_games%>%
filter(athlete == 59866)%>%
select(country)
#separate the measurements attribute into heights and weights attributes
heights_weights <- athletes_results %>%
separate(measurements, into =  c("heights", "weights"), sep ="/")%>%
mutate(heights = as.numeric(str_extract(heights, "\\d+")),
weights = as.numeric(str_extract(weights, "\\d+")))
heights_weights
athletes_results
athletes <- athletes <- read_delim("athletes.csv", delim = ";",
escape_double = FALSE, trim_ws = TRUE)
athletes_results <- inner_join(athletes, results, by = "athlete")
# Inner join was used because I only want results where we know which athlete participated in the games
# To get the average height and average weight of male participants
heights_weights%>%
select(athlete, sex, heights, weights) %>%
filter(sex == "Male") %>%
distinct(athlete, .keep_all = TRUE) %>%
summarise(Avg_height = mean(heights, na.rm = TRUE),
Avg_weight = mean(weights, na.rm = TRUE))
heights_weights%>%
filter(heights == max(heights, na.rm = TRUE))
games <- read_tsv("games.tsv")
athletes_results_games <- left_join(athletes_results, games,
by =c("season", "year"))
anti_join(games, athletes_results, by =c("season","year"))
View(athletes_results_games)
athletes_results_games <- left_join(athletes_results, games,
by =c("season", "year"))
athletes_results_games <- left_join(athletes_results, games,
by =c("season", "year"))
athlete_results_games
anti_join(games, athletes_results, by =c("season","year"))
# It drops
birthday <- athletes_results_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
birthday
#To get the age of the athlete at the opening of the olympic games
df_age <- birthday%>%
mutate (age = round(interval(birthday, games_opened) / dyears(1)))
df_age
df_female_age <- df_age %>%
group_by(sport)%>%
filter(sex == "Female" & !is.na(age))%>%
summarize(avg_age = mean(age), n = n())%>%
arrange(avg_age)
df_female_age[1:10, ]
summer_games_2016 <- athletes_results_games%>%
filter(year == 2016 & season == "Summer" )%>%
pivot_wider(names_from = medal, values_from = medal)
summer_games_2016_individual <- summer_games_2016 %>%
filter(is.na(team)) %>%
group_by(country)%>%
summarise(Gold   = sum(!is.na(Gold)),
Silver = sum(!is.na(Silver)),
Bronze = sum(!is.na(Bronze)))
summer_games_2016_team <- summer_games_2016 %>%
filter(!is.na(team)) %>%
select(sport, discipline, country, Gold, Silver, Bronze)%>%
distinct(.keep_all = TRUE)%>%
group_by(country)%>%
summarise(Gold   = sum(!is.na(Gold)),
Silver = sum(!is.na(Silver)),
Bronze = sum(!is.na(Bronze)))
medal_table_summer_2016 <- summer_games_2016_individual%>%
left_join(summer_games_2016_team, by ="country")
# replace all NA with 0 in order to calculate the sum of the medals
medal_table_summer_2016[is.na(medal_table_summer_2016)] = 0
medal_table_summer_2016 <- medal_table_summer_2016 %>%
mutate(Gold = Gold.x + Gold.y,
Silver = Silver.x + Silver.y,
Bronze = Bronze.x + Bronze.y)%>%
select(country, Gold, Silver, Bronze)%>%
mutate(Total = Gold + Silver + Bronze) %>%
arrange(desc(Gold),desc(Silver), desc(Bronze))
medal_table_summer_2016[1:10, ]
athletes_results_games%>%
mutate(UID = paste(name, athlete, country)) %>%
distinct(UID, .keep_all = TRUE) %>%
group_by(name, athlete) %>%
summarise(name = first(name), countries = n()) %>%
arrange(countries) %>%
filter(countries >= 4)
#To display different countries for which the athlete has started
athletes_results_games%>%
filter(athlete == 59866)%>%
select(country)
games <- read_tsv("games.tsv")
athletes_results_games <- left_join(athletes_results, games,
by =c("season", "year"))
athletes_results_games
anti_join(games, athletes_results, by =c("season","year"))
# The reason for the missing result is because it has a matching value in games
#separate born variable into birthday and birth city variables
birthday <- athletes_results_games%>%
separate(born, c("birthday", "birth_city"), "in")%>%
mutate(birthday = dmy(birthday))
birthday
#To get the age of the athlete at the opening of the olympic games
df_age <- birthday%>%
mutate (age = round(interval(birthday, games_opened) / dyears(1)))
df_age
df_female_age <- df_age %>%
group_by(sport)%>%
filter(sex == "Female" & !is.na(age))%>%
summarize(avg_age = mean(age), n = n())%>%
arrange(avg_age)
df_female_age[1:10, ]
results%>%
group_by(country)%>%
summarise(count = n())%>%
select(country)%>%
slice(1:10)
results%>%
group_by(country)%>%
summarise(count = n())%>%
arrange(count)%>%
select(country)%>%
slice(1:10)
results%>%
group_by(country)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
select(country)%>%
slice(1:10)
results%>%
group_by(country)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
select(country,count)%>%
slice(1:10)
results%>%
group_by(country)%>%
summarise(count = n())%>%
arrange(desc(count))%>%
slice(1:10)
results%>%
filter(str_detect(country, "Germany") & season == "Winter")
results%>%
count(filter(str_detect(country, "Germany") & season == "Winter"))
results%>%
count(n = n(filter(str_detect(country, "Germany") & season == "Winter")) )
results%>%
filter(str_detect(country, "Germany") & (season == "Winter"))%>%
Summarise(n = n())
results%>%
filter(str_detect(country, "Germany") & (season == "Winter"))%>%
Summarise(count = n())
results%>%
filter(str_detect(country, "Germany") & (season == "Winter"))%>%
summarise(count = n())
athletes <- athletes <- read_delim("athletes.csv", delim = ";",
escape_double = FALSE, trim_ws = TRUE)
View(athletes)
athlete_results%>%
separate(measurements, into = c("heights, weights"), sep = "/")%>%
mutate(heights = as.numeric(str_extract(heights)),
weights = as.numeric(str_extract(weights)))
athletes_results%>%
separate(measurements, into = c("heights, weights"), sep = "/")%>%
mutate(heights = as.numeric(str_extract(heights)),
weights = as.numeric(str_extract(weights)))
athletes_results%>%
separate(measurements, into = c("heights, weights"), sep = "/")%>%
mutate(heights = as.numeric(str_extract(heights, "\\d+")),
weights = as.numeric(str_extract(weights, "\\d+")))
df_height <- athletes_results%>%
separate(measurements, into = c("heights, weights"), sep = "/")%>%
mutate(heights = as.numeric(str_extract(heights, "\\d+")),
weights = as.numeric(str_extract(weights, "\\d+")))
athletes_results%>%
separate(measurements, into = c("heights", "weights"), sep = "/")%>%
mutate(heights = as.numeric(str_extract(heights, "\\d+")),
weights = as.numeric(str_extract(weights, "\\d+")))
df_height%>%
select(athlete,sex,heights, weights )%>%
filter(sex == "Male")%>%
distinct(athlete, .keep_all = TRUE)%>%
summarise(Avg_heights = mean(heights, na.rm = TRUE),
Avg_weights = mean(weights, na,rm = TRUE))
heights_weights%>%
select(athlete,sex,heights, weights )%>%
filter(sex == "Male")%>%
distinct(athlete, .keep_all = TRUE)%>%
summarise(Avg_heights = mean(heights, na.rm = TRUE),
Avg_weights = mean(weights, na,rm = TRUE))
heights_weights
heights_weights <- athletes_results %>%
separate(measurements, into =  c("heights", "weights"), sep ="/")%>%
mutate(heights = as.numeric(str_extract(heights, "\\d+")),
weights = as.numeric(str_extract(weights, "\\d+")))
heights_weights%>%
select(athlete,sex,heights, weights )%>%
filter(sex == "Male")%>%
distinct(athlete, .keep_all = TRUE)%>%
summarise(Avg_heights = mean(heights, na.rm = TRUE),
Avg_weights = mean(weights, na.rm = TRUE))
library(readr)
full <- read_csv("~/R/R projects/data_class_exam/full.csv")
View(full)
library(readr)
population <- read_table2("~/R/R projects/data_class_exam/population.txt")
View(population)
